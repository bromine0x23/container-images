name: 镜像构建模版

on:
  workflow_call:
    inputs:
      image-label-authors:
        required: false
        type: string
        default: 'Bromine0x23 <bromine0x23@gmail.com>'
      image-label-title:
        required: true
        type: string
      image-label-description:
        required: false
        type: string
      image-label-version:
        required: true
        type: string
      image-label-licenses:
        required: false
        type: string
        default: WTFPL
      image-build-context:
        default: '.'
        required: false
        type: string
      image-build-dockerfile:
        required: false
        type: string
      image-build-args:
        required: false
        type: string
      image-build-platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64/v8
      image-name:
        required: true
        type: string
      image-tag:
        required: false
        type: string
        default: ''
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
  
jobs:
  image-build-job:
    runs-on: ubuntu-latest
    steps:
    - id: setup
      name: 设置
      run: |
        {
          echo 'IMAGE_TAGS<<EOF'
          for NAME in ${{ inputs.image-name }}; do
            for TAG in ${{ inputs.image-tag }}; do
              echo "${NAME}:${TAG}"
            done
          done
          echo EOF
        } >> "$GITHUB_ENV"
        echo "IMAGE_LABEL_CREATED=$(date --rfc-3339=seconds)" >> $GITHUB_ENV
    - id: checkout
      name: 检出代码
      uses: actions/checkout@v4
    - id: setup_qemu
      name: 设置 QEMU
      uses: docker/setup-qemu-action@v3
    - id: setup_buildx
      name: 设置 Docker Buildx
      uses: docker/setup-buildx-action@v3
    - id: login_dockerhub
      name: 登录 Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - id: login_ghcr
      name: 登录 GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - id: build_push
      name: 构建及发布镜像
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.image-build-context }}
        file: ${{ inputs.image-build-dockerfile || format('{0}/Dockerfile', inputs.image-build-context) }}
        build-args: ${{ inputs.image-build-args }}
        labels: |
          org.opencontainers.image.created="${{ env.IMAGE_LABEL_CREATED }}"
          org.opencontainers.image.authors="${{ inputs.image-label-authors }}"
          org.opencontainers.image.title="${{ inputs.image-label-title }}"
          org.opencontainers.image.description="${{ inputs.image-label-description }}"
          org.opencontainers.image.version="${{ inputs.image-label-version }}"
          org.opencontainers.image.revision="${{ github.sha }}"
          org.opencontainers.image.url="${{ github.server_url }}/${{ github.repository }}"
          org.opencontainers.image.source="${{ github.server_url }}/${{ github.repository }}"
          org.opencontainers.image.licenses="${{ inputs.image-label-licenses }}"
        platforms: ${{ inputs.image-build-platforms }}
        push: true
        tags: ${{ env.IMAGE_TAGS }}
    # - id: trivy
    #   name: 漏洞扫描
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: '${{ env.IMAGE_REPOSITORY_DOCKERHUB }}:${{ inputs.image-tag }}'
    #     vuln-type: 'os,library'
    #     severity: 'CRITICAL,HIGH'
    #     ignore-unfixed: true
    #     format: 'table'